//
// UplaodDeviceReadings.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class UplaodDeviceReadings: Codable {

    public var inspectionHash: String?
    public var appInfo: AppInfo?
    public var deviceinformation: ReadingDeviceinformation?
    public var testInformation: TestInformation?
    public var token: String?


    
    public init(inspectionHash: String?, appInfo: AppInfo?, deviceinformation: ReadingDeviceinformation?, testInformation: TestInformation?, token: String?) {
        self.inspectionHash = inspectionHash
        self.appInfo = appInfo
        self.deviceinformation = deviceinformation
        self.testInformation = testInformation
        self.token = token
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(inspectionHash, forKey: "inspectionHash")
        try container.encodeIfPresent(appInfo, forKey: "appInfo")
        try container.encodeIfPresent(deviceinformation, forKey: "deviceinformation")
        try container.encodeIfPresent(testInformation, forKey: "testInformation")
        try container.encodeIfPresent(token, forKey: "token")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        inspectionHash = try container.decodeIfPresent(String.self, forKey: "inspectionHash")
        appInfo = try container.decodeIfPresent(AppInfo.self, forKey: "appInfo")
        deviceinformation = try container.decodeIfPresent(ReadingDeviceinformation.self, forKey: "deviceinformation")
        testInformation = try container.decodeIfPresent(TestInformation.self, forKey: "testInformation")
        token = try container.decodeIfPresent(String.self, forKey: "token")
    }
}

