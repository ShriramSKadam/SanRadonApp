//
// ApiResponseIActionResult.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Test */

public class ApiResponseIActionResult: Codable {

    public var code: Int?
    public var requestKey: String?
    public var message: String?
    public var detail: String?
    public var result: IActionResult?
    public var hasError: Bool?


    
    public init(code: Int?, requestKey: String?, message: String?, detail: String?, result: IActionResult?, hasError: Bool?) {
        self.code = code
        self.requestKey = requestKey
        self.message = message
        self.detail = detail
        self.result = result
        self.hasError = hasError
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(code, forKey: "code")
        try container.encodeIfPresent(requestKey, forKey: "requestKey")
        try container.encodeIfPresent(message, forKey: "message")
        try container.encodeIfPresent(detail, forKey: "detail")
        try container.encodeIfPresent(result, forKey: "result")
        try container.encodeIfPresent(hasError, forKey: "hasError")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        code = try container.decodeIfPresent(Int.self, forKey: "code")
        requestKey = try container.decodeIfPresent(String.self, forKey: "requestKey")
        message = try container.decodeIfPresent(String.self, forKey: "message")
        detail = try container.decodeIfPresent(String.self, forKey: "detail")
        result = try container.decodeIfPresent(IActionResult.self, forKey: "result")
        hasError = try container.decodeIfPresent(Bool.self, forKey: "hasError")
    }
}

