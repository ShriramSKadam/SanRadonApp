//
// TestSummaryModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class TestSummaryModel: Codable {

    public var crmLocation: String?
    public var start: String?
    public var stop: String?
    public var interval: String?
    public var duration: String?
    public var overallAvg: String?
    public var epaAverage: String?


    
    public init(crmLocation: String?, start: String?, stop: String?, interval: String?, duration: String?, overallAvg: String?, epaAverage: String?) {
        self.crmLocation = crmLocation
        self.start = start
        self.stop = stop
        self.interval = interval
        self.duration = duration
        self.overallAvg = overallAvg
        self.epaAverage = epaAverage
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(crmLocation, forKey: "crmLocation")
        try container.encodeIfPresent(start, forKey: "start")
        try container.encodeIfPresent(stop, forKey: "stop")
        try container.encodeIfPresent(interval, forKey: "interval")
        try container.encodeIfPresent(duration, forKey: "duration")
        try container.encodeIfPresent(overallAvg, forKey: "overallAvg")
        try container.encodeIfPresent(epaAverage, forKey: "epaAverage")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        crmLocation = try container.decodeIfPresent(String.self, forKey: "crmLocation")
        start = try container.decodeIfPresent(String.self, forKey: "start")
        stop = try container.decodeIfPresent(String.self, forKey: "stop")
        interval = try container.decodeIfPresent(String.self, forKey: "interval")
        duration = try container.decodeIfPresent(String.self, forKey: "duration")
        overallAvg = try container.decodeIfPresent(String.self, forKey: "overallAvg")
        epaAverage = try container.decodeIfPresent(String.self, forKey: "epaAverage")
    }
}

